package org.sanjose.web.accountant;

import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;

import org.sanjose.util.ConfigurationUtil;
import org.sanjose.util.DateValidator;
import org.sanjose.web.helper.OperacionesTable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class AccountantCajaComponent extends CustomComponent {

	@AutoGenerated
	public VerticalLayout mainLayout;
	@AutoGenerated
	public VerticalLayout saldosCierVerticalLayout;
	@AutoGenerated
	public HorizontalLayout catCierTotalHorizontalLayout;
	@AutoGenerated
	public Label totalCierLabel;
	@AutoGenerated
	public Label label_7;
	@AutoGenerated
	public HorizontalLayout catCierHorizontalLayout;
	@AutoGenerated
	public Label catCierLabel;
	@AutoGenerated
	public Label catCierNombre;
	@AutoGenerated
	public HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	public Label monedaSaldosLabel;
	@AutoGenerated
	public Label label_6;
	@AutoGenerated
	public Panel opPanel;
	@AutoGenerated
	public VerticalLayout opPanelVerticalLayout;
	@AutoGenerated
	public OperacionesTable opTable;
	@AutoGenerated
	public HorizontalLayout ingresoEgresoHorizontalLayout;
	@AutoGenerated
	public Button egresoButton;
	@AutoGenerated
	public Button ingresoButton;
	@AutoGenerated
	public ComboBox catCombo;
	@AutoGenerated
	public ComboBox cuentaCombo;
	@AutoGenerated
	public ComboBox ingrEgrCombo;
	@AutoGenerated
	public VerticalLayout saldosInicialVerticalLayout;
	@AutoGenerated
	public HorizontalLayout catIniTotalHorizontalLayout;
	@AutoGenerated
	public Label catTotalLabel;
	@AutoGenerated
	public Label label_saldosTotales;
	@AutoGenerated
	public HorizontalLayout catIniHorizontalLayout;
	@AutoGenerated
	public Label label_saldoTotalInicio;
	@AutoGenerated
	public Label catNombre;
	@AutoGenerated
	public HorizontalLayout saldosInicialHeaderHorizontalLayout;
	@AutoGenerated
	public Label monedaInicioLabel;
	@AutoGenerated
	public Label label_saldosInicial;
	@AutoGenerated
	public VerticalLayout verticalLayout_2;
	@AutoGenerated
	public HorizontalLayout topHorizontalLayout;
	@AutoGenerated
	public Button imprimirButton;
	@AutoGenerated
	public Button exportarButton;
	@AutoGenerated
	public Button cerrarButton;
	@AutoGenerated
	public ComboBox monedaCombo;
	@AutoGenerated
	public Label label_1;
	@AutoGenerated
	public PopupDateField cajaDateField;
	@AutoGenerated
	public PopupDateField cajaMaxDateField;
	@AutoGenerated
	public Label label_2;
	@AutoGenerated
	public Label label_3;
	@AutoGenerated
	public ComboBox cajaBancoCombo;
	@AutoGenerated
	public ComboBox bancosCombo;
	@AutoGenerated
	public CheckBox isNullCtaDetalle;
	
	
	private Map<Integer, HorizontalLayout> catIniLayouts = new TreeMap<Integer, HorizontalLayout>();
	private Map<Integer, HorizontalLayout> catCierLayouts = new TreeMap<Integer, HorizontalLayout>();

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */


	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AccountantCajaComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);		
	}

	public CheckBox getIsNullCtaDetalle() {
		return isNullCtaDetalle;
	}

	public ComboBox getCajaBancoCombo() {
		return cajaBancoCombo;
	}

	public ComboBox getBancosCombo() {
		return bancosCombo;
	}

	public Map<Integer, HorizontalLayout> getCatIniLayouts() {
		return catIniLayouts;
	}

	public void setCatIniLayouts(Map<Integer, HorizontalLayout> catIniLayouts) {
		this.catIniLayouts = catIniLayouts;
	}

	public Map<Integer, HorizontalLayout> getCatCierLayouts() {
		return catCierLayouts;
	}

	public void setCatCierLayouts(Map<Integer, HorizontalLayout> catCierLayouts) {
		this.catCierLayouts = catCierLayouts;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public Label getTotalCierLabel() {
		return totalCierLabel;
	}

	public Label getLabel_7() {
		return label_7;
	}

	public Label getCatCierLabel() {
		return catCierLabel;
	}

	public Label getCatCierNombre() {
		return catCierNombre;
	}

	public Label getMonedaSaldosLabel() {
		return monedaSaldosLabel;
	}

	public Label getLabel_6() {
		return label_6;
	}

	public Panel getOpPanel() {
		return opPanel;
	}

	public Table getOpTable() {
		return opTable;
	}

	public Button getEgresoButton() {
		return egresoButton;
	}

	public Button getIngresoButton() {
		return ingresoButton;
	}

	public ComboBox getCatCombo() {
		return catCombo;
	}

	public ComboBox getIngrEgrCombo() {
		return ingrEgrCombo;
	}

	public Label getCatTotalLabel() {
		return catTotalLabel;
	}

	public Label getLabel_saldosTotales() {
		return label_saldosTotales;
	}

	public Label getLabel_saldoTotalInicio() {
		return label_saldoTotalInicio;
	}

	public Label getCatNombre() {
		return catNombre;
	}
	public ComboBox getCuentaCombo() {
		return cuentaCombo;
	}

	public Label getMonedaInicioLabel() {
		return monedaInicioLabel;
	}

	public Label getLabel_saldosInicial() {
		return label_saldosInicial;
	}

	public Button getImprimirButton() {
		return imprimirButton;
	}

	public Button getExportarButton() {
		return exportarButton;
	}

	public ComboBox getMonedaCombo() {
		return monedaCombo;
	}

	public Label getLabel_1() {
		return label_1;
	}

	public PopupDateField getCajaDateField() {
		return cajaDateField;
	}

	public Label getLabel_2() {
		return label_2;
	}

	public Button getCerrarButton() {
		return cerrarButton;
	}

	public void setCerrarButton(Button cerrarButton) {
		this.cerrarButton = cerrarButton;
	}

	public PopupDateField getCajaMaxDateField() {
		return cajaMaxDateField;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		//mainLayout.setHeight("-1px");
		mainLayout.setSizeFull();
		mainLayout.setMargin(false,true,false,true);
		
		// top-level component properties
		setWidth("100.0%");
		setSizeFull();		
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		mainLayout.addComponent(verticalLayout_2);
		mainLayout.setComponentAlignment(verticalLayout_2, new Alignment(20));
		
		// saldosInicialVerticalLayout
		saldosInicialVerticalLayout = buildSaldosInicialVerticalLayout();
		mainLayout.addComponent(saldosInicialVerticalLayout);
		mainLayout.setComponentAlignment(saldosInicialVerticalLayout,
				new Alignment(48));
		
		// opPanel
		opPanel = buildOpPanel();
		mainLayout.addComponent(opPanel);
		mainLayout.setExpandRatio(opPanel, 1f);
		mainLayout.setComponentAlignment(opPanel, new Alignment(48));
		
		// saldosCierVerticalLayout
		saldosCierVerticalLayout = buildSaldosCierVerticalLayout();
		mainLayout.addComponent(saldosCierVerticalLayout);
		mainLayout.setComponentAlignment(saldosCierVerticalLayout,
				new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("900px");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		
		// topHorizontalLayout
		topHorizontalLayout = buildTopHorizontalLayout();
		verticalLayout_2.addComponent(topHorizontalLayout);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildTopHorizontalLayout() {
		// common part: create layout
		topHorizontalLayout = new HorizontalLayout();
		topHorizontalLayout.setImmediate(false);
		topHorizontalLayout.setWidth("100.0%");
		topHorizontalLayout.setHeight("-1px");
		topHorizontalLayout.setMargin(false);
		
		// cajaBancoCombo
		cajaBancoCombo = new ComboBox();
		cajaBancoCombo.setImmediate(true);
		cajaBancoCombo.setWidth("6.0em");
		cajaBancoCombo.setHeight("-1px");
		topHorizontalLayout.addComponent(cajaBancoCombo);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("<b>del:</b>");
		label_2.setContentMode(3);
		topHorizontalLayout.addComponent(label_2);
		topHorizontalLayout.setComponentAlignment(label_2, new Alignment(48));
		
		// cajaDateField
		cajaDateField = new PopupDateField();
		try {
			Date minDate = new SimpleDateFormat("yyyyMMdd").parse("20100101");
			System.out.println("Min date: " + minDate.toLocaleString());
			cajaDateField.addValidator(
					new DateValidator("La fecha seleccionada no esta correcta", "dd/MM/yyyy", 
							minDate, ConfigurationUtil.getEndOfDay(new Date(System.currentTimeMillis()))));
			} catch (ParseException e) {
		}		
		cajaDateField.setImmediate(false);
		cajaDateField.setWidth("9.0em");
		cajaDateField.setHeight("-1px");
		cajaDateField.setDateFormat("dd/MM/yyyy");
		cajaDateField.setResolution(DateField.RESOLUTION_DAY);
		cajaDateField.setInvalidAllowed(false);
		topHorizontalLayout.addComponent(cajaDateField);
	
		// label_2
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setValue("<b> hasta:</b>");
		label_3.setContentMode(3);
		topHorizontalLayout.addComponent(label_3);
		topHorizontalLayout.setComponentAlignment(label_3, new Alignment(48));
		// cajaDateField
		cajaMaxDateField = new PopupDateField();
		try {
			Date minDate = new SimpleDateFormat("yyyyMMdd").parse("20100101");
			System.out.println("Min date: " + minDate.toLocaleString());
			cajaMaxDateField.addValidator(
					new DateValidator("La fecha seleccionada no esta correcta", "dd/MM/yyyy", 
							minDate, ConfigurationUtil.getEndOfDay(new Date(System.currentTimeMillis()))));
			} catch (ParseException e) {
		}		
		cajaMaxDateField.setImmediate(true);
		cajaMaxDateField.setWidth("9.0em");
		cajaMaxDateField.setHeight("-1px");
		cajaMaxDateField.setDateFormat("dd/MM/yyyy");
		cajaMaxDateField.setResolution(DateField.RESOLUTION_DAY);
		cajaMaxDateField.setInvalidAllowed(false);
		topHorizontalLayout.addComponent(cajaMaxDateField);
		
		// bancosCombo 
		bancosCombo = new ComboBox();
		bancosCombo.setImmediate(true);
		bancosCombo.setWidth("9.0em");
		bancosCombo.setHeight("-1px");
		bancosCombo.setVisible(false);
		topHorizontalLayout.addComponent(bancosCombo);
		topHorizontalLayout.setComponentAlignment(bancosCombo, new Alignment(48));

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("<b>Moneda</b>");
		label_1.setContentMode(3);
		topHorizontalLayout.addComponent(label_1);
		topHorizontalLayout.setComponentAlignment(label_1, new Alignment(48));
		
		// monedaCombo
		monedaCombo = new ComboBox();
		monedaCombo.setImmediate(false);
		monedaCombo.setWidth("9.0em");
		monedaCombo.setHeight("-1px");
		topHorizontalLayout.addComponent(monedaCombo);
		
		// imprimirButton
		imprimirButton = new Button();
		imprimirButton.setCaption("Imprimir Reporte");
		imprimirButton.setImmediate(true);
		imprimirButton.setWidth("-1px");
		imprimirButton.setHeight("-1px");
		topHorizontalLayout.addComponent(imprimirButton);
		topHorizontalLayout.setComponentAlignment(imprimirButton,
				new Alignment(48));

		// exportarButton
		exportarButton = new Button();
		exportarButton.setCaption("Exportar");
		exportarButton.setImmediate(true);
		exportarButton.setWidth("-1px");
		exportarButton.setHeight("-1px");
		topHorizontalLayout.addComponent(exportarButton);
		topHorizontalLayout.setComponentAlignment(exportarButton,
				new Alignment(48));

		// cerrarButton
		cerrarButton = new Button();
		cerrarButton.setCaption("Cerrar");
		cerrarButton.setImmediate(true);
		cerrarButton.setWidth("-1px");
		cerrarButton.setHeight("-1px");
		topHorizontalLayout.addComponent(cerrarButton);
		topHorizontalLayout.setComponentAlignment(cerrarButton,
				new Alignment(48));
		
		return topHorizontalLayout;
	}

	public VerticalLayout buildSaldosInicialVerticalLayout() {
		// common part: create layout
		if (saldosInicialVerticalLayout==null)
			saldosInicialVerticalLayout	= new VerticalLayout();
		else {
			saldosInicialVerticalLayout.removeAllComponents();	
		}
		saldosInicialVerticalLayout.setImmediate(false);
		saldosInicialVerticalLayout.setWidth("600px");
		saldosInicialVerticalLayout.setHeight("-1px");
		saldosInicialVerticalLayout.setMargin(false);
		
		// saldosInicialHeaderHorizontalLayout
		saldosInicialHeaderHorizontalLayout = buildSaldosInicialHeaderHorizontalLayout();
		saldosInicialVerticalLayout
				.addComponent(saldosInicialHeaderHorizontalLayout);
		
		// catIniHorizontalLayout
		for (Integer i :  catIniLayouts.keySet()) {
			HorizontalLayout hl = catIniLayouts.get(i);
			saldosInicialVerticalLayout.addComponent(hl);
		}
			
		// catIniTotalHorizontalLayout
		catIniTotalHorizontalLayout = buildCatIniTotalHorizontalLayout();
		saldosInicialVerticalLayout.addComponent(catIniTotalHorizontalLayout);
		
		saldosInicialVerticalLayout.requestRepaint();
		return saldosInicialVerticalLayout;
	}

	public HorizontalLayout buildSaldosInicialHeaderHorizontalLayout() {
		// common part: create layout
		if (saldosInicialHeaderHorizontalLayout ==null)
			saldosInicialHeaderHorizontalLayout = new HorizontalLayout();
		else
			saldosInicialHeaderHorizontalLayout.removeAllComponents();
		saldosInicialHeaderHorizontalLayout.setImmediate(false);
		saldosInicialHeaderHorizontalLayout.setWidth("100.0%");
		saldosInicialHeaderHorizontalLayout.setHeight("-1px");
		saldosInicialHeaderHorizontalLayout.setMargin(false);
		
		// label_saldosInicial
		label_saldosInicial = new Label();
		label_saldosInicial.setStyleName("caja-saldos-header");
		label_saldosInicial.setImmediate(false);
		label_saldosInicial.setWidth("25.0em");
		label_saldosInicial.setHeight("-1px");
		label_saldosInicial.setValue("               Saldos al inicio del dia");
		saldosInicialHeaderHorizontalLayout.addComponent(label_saldosInicial);
		saldosInicialHeaderHorizontalLayout.setComponentAlignment(
				label_saldosInicial, Alignment.MIDDLE_LEFT);
		
		// monedaInicioLabel
		if (monedaInicioLabel == null)
			monedaInicioLabel = new Label();			
		monedaInicioLabel.setStyleName("caja-saldos-header");
		monedaInicioLabel.setImmediate(false);
		monedaInicioLabel.setWidth("-1px");
		monedaInicioLabel.setHeight("-1px");
		monedaInicioLabel.setValue("Soles");
		saldosInicialHeaderHorizontalLayout.addComponent(monedaInicioLabel);
		saldosInicialHeaderHorizontalLayout.setComponentAlignment(
				monedaInicioLabel, Alignment.MIDDLE_RIGHT);
		
		saldosInicialHeaderHorizontalLayout.requestRepaint();
		return saldosInicialHeaderHorizontalLayout;
	}

	public HorizontalLayout buildCatIniHorizontalLayout(int num, String nombre, Object value) {
		// common part: create layout
		catIniHorizontalLayout = new HorizontalLayout();
		catIniHorizontalLayout.setImmediate(false);
		catIniHorizontalLayout.setWidth("100.0%");
		catIniHorizontalLayout.setHeight("-1px");
		catIniHorizontalLayout.setMargin(false);
		
		// catNombre
		catNombre = new Label();
		catNombre.setStyleName("caja-saldos-detail");
		catNombre.setImmediate(false);
		catNombre.setWidth("25.0em");
		catNombre.setHeight("-1px");
		catNombre.setValue(num + ".  " + nombre);
		catIniHorizontalLayout.addComponent(catNombre);
		catIniHorizontalLayout.setComponentAlignment(catNombre, new Alignment(
				33));
		
		// label_saldoTotalInicio
		label_saldoTotalInicio = new Label();
		label_saldoTotalInicio.setStyleName("caja-saldos-detail");
		label_saldoTotalInicio.setImmediate(false);
		//label_saldoTotalInicio
		//		.setDescription("s/. 50,000.00                     .");
		label_saldoTotalInicio.setWidth("-1px");
		label_saldoTotalInicio.setHeight("-1px");
		label_saldoTotalInicio.setValue(value);
		if (((BigDecimal)value).compareTo(new BigDecimal(0))<0) label_saldoTotalInicio.setStyleName("red");
		catIniHorizontalLayout.addComponent(label_saldoTotalInicio);
		catIniHorizontalLayout.setComponentAlignment(label_saldoTotalInicio,
				Alignment.MIDDLE_RIGHT);
		
		return catIniHorizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildCatIniTotalHorizontalLayout() {
		// common part: create layout
		catIniTotalHorizontalLayout = new HorizontalLayout();
		catIniTotalHorizontalLayout.setImmediate(false);
		catIniTotalHorizontalLayout.setWidth("100.0%");
		catIniTotalHorizontalLayout.setHeight("-1px");
		catIniTotalHorizontalLayout.setMargin(false);
		
		// label_saldosTotales
		label_saldosTotales = new Label();
		label_saldosTotales.setStyleName("caja-saldos-footer");
		label_saldosTotales.setImmediate(false);
		label_saldosTotales.setWidth("20.0em");
		label_saldosTotales.setHeight("-1px");
		label_saldosTotales.setValue("               Total:");
		label_saldosTotales.setContentMode(3);
		catIniTotalHorizontalLayout.addComponent(label_saldosTotales);
		
		// catTotalLabel
		catTotalLabel = new Label();
		catTotalLabel.setStyleName("caja-saldos-footer");
		catTotalLabel.setImmediate(false);
		catTotalLabel.setWidth("-1px");
		catTotalLabel.setHeight("-1px");
		//catTotalLabel.setValue("s/.: 150.000,00                            ");
		catTotalLabel.setContentMode(3);
		catIniTotalHorizontalLayout.addComponent(catTotalLabel);
		catIniTotalHorizontalLayout.setComponentAlignment(catTotalLabel, Alignment.MIDDLE_RIGHT);
		
		return catIniTotalHorizontalLayout;
	}

	@AutoGenerated
	private Panel buildOpPanel() {
		// common part: create layout
		opPanel = new Panel();
		opPanel.setImmediate(false);
		opPanel.setWidth("100.0%");
		//opPanel.setHeight("220px");
		opPanel.setSizeFull();
		//opPanel.set
		
		// opPanelVerticalLayout
		opPanelVerticalLayout = buildOpPanelVerticalLayout();
		opPanel.setContent(opPanelVerticalLayout);
		
		return opPanel;
	}

	@AutoGenerated
	private VerticalLayout buildOpPanelVerticalLayout() {
		// common part: create layout
		opPanelVerticalLayout = new VerticalLayout();
		opPanelVerticalLayout.setImmediate(false);
		opPanelVerticalLayout.setWidth("100.0%");
		opPanelVerticalLayout.setSizeFull();
		//opPanelVerticalLayout.setHeight("200px");
		
		//opPanelVerticalLayout.sete
		//opPanelVerticalLayout.setExpandRatio(, ratio)("200px");
		//opPanelVerticalLayout.setMargin(true);
		
		// ingresoEgresoHorizontalLayout
		ingresoEgresoHorizontalLayout = buildIngresoEgresoHorizontalLayout();
		opPanelVerticalLayout.addComponent(ingresoEgresoHorizontalLayout);
		opPanelVerticalLayout.setComponentAlignment(
				ingresoEgresoHorizontalLayout, new Alignment(48));
		
		// opTable
		opTable = new OperacionesTable();
		opTable.setImmediate(false);
		opTable.setWidth("100.0%");
		opPanelVerticalLayout.addComponent(opTable);
		opPanelVerticalLayout.setExpandRatio(opTable, 1.0f);
		opPanelVerticalLayout.setComponentAlignment(opTable, new Alignment(48));
		
		return opPanelVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildIngresoEgresoHorizontalLayout() {
		// common part: create layout
		ingresoEgresoHorizontalLayout = new HorizontalLayout();
		ingresoEgresoHorizontalLayout.setImmediate(false);
		ingresoEgresoHorizontalLayout.setWidth("1000px");
		ingresoEgresoHorizontalLayout.setHeight("-1px");
		ingresoEgresoHorizontalLayout.setMargin(false);
		ingresoEgresoHorizontalLayout.setSpacing(true);
		
		// isNullCtaDetalle
		isNullCtaDetalle = new CheckBox();
		isNullCtaDetalle.setCaption("Solo canje");
		isNullCtaDetalle.setImmediate(true);
		ingresoEgresoHorizontalLayout.addComponent(isNullCtaDetalle);
		ingresoEgresoHorizontalLayout.setComponentAlignment(isNullCtaDetalle,
						new Alignment(48));

		// catCombo
		catCombo = new ComboBox();
		catCombo.setCaption("Categoria");
		catCombo.setImmediate(false);
		catCombo.setWidth("12.8em");
		catCombo.setHeight("-1px");
		ingresoEgresoHorizontalLayout.addComponent(catCombo);
		ingresoEgresoHorizontalLayout.setComponentAlignment(catCombo,
				new Alignment(48));

		// cuentaCombo
		cuentaCombo = new ComboBox();
		cuentaCombo.setCaption("Cuenta");
		cuentaCombo.setImmediate(false);
		cuentaCombo.setWidth("15.8em");
		cuentaCombo.setHeight("-1px");
		ingresoEgresoHorizontalLayout.addComponent(cuentaCombo);
		ingresoEgresoHorizontalLayout.setComponentAlignment(cuentaCombo,
				new Alignment(48));
		
		// ingrEgrCombo
		ingrEgrCombo = new ComboBox();
		ingrEgrCombo.setCaption("Ingresos/Egresos");
		ingrEgrCombo.setImmediate(false);
		ingrEgrCombo.setWidth("-1px");
		ingrEgrCombo.setHeight("-1px");
		ingresoEgresoHorizontalLayout.addComponent(ingrEgrCombo);
		
		// ingresoButton
		ingresoButton = new Button();
		ingresoButton.setCaption("Ingreso");
		ingresoButton.setImmediate(true);
		ingresoButton.setWidth("10.0em");
		ingresoButton.setHeight("-1px");
		ingresoEgresoHorizontalLayout.addComponent(ingresoButton);
		ingresoEgresoHorizontalLayout.setComponentAlignment(ingresoButton,
				new Alignment(48));
		
		// egresoButton
		egresoButton = new Button();
		egresoButton.setCaption("Egreso");
		egresoButton.setImmediate(true);
		egresoButton.setWidth("10.0em");
		egresoButton.setHeight("-1px");
		ingresoEgresoHorizontalLayout.addComponent(egresoButton);
		ingresoEgresoHorizontalLayout.setComponentAlignment(egresoButton,
				new Alignment(48));
		
		return ingresoEgresoHorizontalLayout;
	}

	public VerticalLayout buildSaldosCierVerticalLayout() {
		// common part: create layout
		if (saldosCierVerticalLayout==null)
			saldosCierVerticalLayout = new VerticalLayout();
		else {
			saldosCierVerticalLayout.removeAllComponents();	
		}
		saldosCierVerticalLayout.setImmediate(false);
		saldosCierVerticalLayout.setWidth("600px");
		saldosCierVerticalLayout.setHeight("-1px");
		saldosCierVerticalLayout.setMargin(false);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		saldosCierVerticalLayout.addComponent(horizontalLayout_1);
		saldosCierVerticalLayout.setComponentAlignment(horizontalLayout_1,
				new Alignment(48));
		
		// catIniHorizontalLayout
		for (Integer i :  catCierLayouts.keySet()) {
			HorizontalLayout hl = catCierLayouts.get(i);
			saldosCierVerticalLayout.addComponent(hl);
		}
		
		// catCierTotalHorizontalLayout
		catCierTotalHorizontalLayout = buildCatCierTotalHorizontalLayout();
		saldosCierVerticalLayout.addComponent(catCierTotalHorizontalLayout);
		saldosCierVerticalLayout.requestRepaint();
		return saldosCierVerticalLayout;
	}

	public HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		if (horizontalLayout_1 ==null)
			horizontalLayout_1 = new HorizontalLayout();
		else
			horizontalLayout_1.removeAllComponents();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// label_6
		label_6 = new Label();
		label_6.setStyleName("caja-saldos-header");
		label_6.setImmediate(false);
		label_6.setWidth("20.0em");
		label_6.setHeight("-1px");
		label_6.setValue("               Saldos al cierre del dia");
		horizontalLayout_1.addComponent(label_6);
		
		// monedaSaldosLabel
		if (monedaSaldosLabel == null) 
			monedaSaldosLabel = new Label();
		monedaSaldosLabel.setStyleName("caja-saldos-header");
		monedaSaldosLabel.setImmediate(false);
		monedaSaldosLabel.setWidth("-1px");
		monedaSaldosLabel.setHeight("-1px");
		monedaSaldosLabel.setValue("Soles");
		horizontalLayout_1.addComponent(monedaSaldosLabel);
		horizontalLayout_1.setComponentAlignment(monedaSaldosLabel,
				Alignment.MIDDLE_RIGHT);
		horizontalLayout_1.requestRepaint();
		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildCatCierHorizontalLayout() {
		// common part: create layout
		if (saldosInicialVerticalLayout==null)
			saldosInicialVerticalLayout	= new VerticalLayout();
		else {
			saldosInicialVerticalLayout.removeAllComponents();	
		}
	
		// common part: create layout
		catCierHorizontalLayout = new HorizontalLayout();
		catCierHorizontalLayout.setImmediate(false);
		catCierHorizontalLayout.setWidth("100.0%");
		catCierHorizontalLayout.setHeight("-1px");
		catCierHorizontalLayout.setMargin(false);
		
		// catCierNombre
		catCierNombre = new Label();
		catCierNombre.setStyleName("caja-saldos-detail");
		catCierNombre.setImmediate(false);
		catCierNombre.setWidth("20.0em");
		catCierNombre.setHeight("18px");
		catCierNombre.setValue("1. <no de cat> Categoria 1                 ");
		catCierHorizontalLayout.addComponent(catCierNombre);
		catCierHorizontalLayout.setComponentAlignment(catCierNombre,
				new Alignment(33));
		
		// catCierLabel
		catCierLabel = new Label();
		catCierLabel.setStyleName("caja-saldos-detail");
		catCierLabel.setImmediate(false);
//		catCierLabel.setDescription("s/. 50,000.00                     .");
		catCierLabel.setWidth("-1px");
		catCierLabel.setHeight("-1px");
//		catCierLabel.setValue("s/. 34,000.00");
		catCierHorizontalLayout.addComponent(catCierLabel);
		catCierHorizontalLayout.setComponentAlignment(catCierLabel,
				new Alignment(48));
		
		return catCierHorizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildCatCierTotalHorizontalLayout() {
		// common part: create layout
		catCierTotalHorizontalLayout = new HorizontalLayout();
		catCierTotalHorizontalLayout.setImmediate(false);
		catCierTotalHorizontalLayout.setWidth("100.0%");
		catCierTotalHorizontalLayout.setHeight("-1px");
		catCierTotalHorizontalLayout.setMargin(false);
		
		// label_7
		label_7 = new Label();
		label_7.setStyleName("caja-saldos-footer");
		label_7.setImmediate(false);
		label_7.setWidth("20.0em");
		label_7.setHeight("-1px");
		label_7.setValue("               Total:");
		label_7.setContentMode(3);
		catCierTotalHorizontalLayout.addComponent(label_7);
		catCierTotalHorizontalLayout.setComponentAlignment(label_7,
				new Alignment(34));
		
		// totalCierLabel
		totalCierLabel = new Label();
		totalCierLabel.setStyleName("caja-saldos-footer");
		totalCierLabel.setImmediate(false);
		totalCierLabel.setWidth("-1px");
		totalCierLabel.setHeight("-1px");
	//	totalCierLabel.setValue("s/.: 150.000,00                            ");
		catCierTotalHorizontalLayout.addComponent(totalCierLabel);
		catCierTotalHorizontalLayout.setComponentAlignment(totalCierLabel,
				Alignment.MIDDLE_RIGHT);
		
		return catCierTotalHorizontalLayout;
	}

	public VerticalLayout getSaldosCierVerticalLayout() {
		return saldosCierVerticalLayout;
	}

	public HorizontalLayout getCatCierTotalHorizontalLayout() {
		return catCierTotalHorizontalLayout;
	}

	public HorizontalLayout getCatCierHorizontalLayout() {
		return catCierHorizontalLayout;
	}

	public HorizontalLayout getHorizontalLayout_1() {
		return horizontalLayout_1;
	}

	public VerticalLayout getOpPanelVerticalLayout() {
		return opPanelVerticalLayout;
	}

	public HorizontalLayout getIngresoEgresoHorizontalLayout() {
		return ingresoEgresoHorizontalLayout;
	}

	public VerticalLayout getSaldosInicialVerticalLayout() {
		return saldosInicialVerticalLayout;
	}

	public HorizontalLayout getCatIniTotalHorizontalLayout() {
		return catIniTotalHorizontalLayout;
	}

	public HorizontalLayout getCatIniHorizontalLayout() {
		return catIniHorizontalLayout;
	}

	public HorizontalLayout getSaldosInicialHeaderHorizontalLayout() {
		return saldosInicialHeaderHorizontalLayout;
	}

	public VerticalLayout getVerticalLayout_2() {
		return verticalLayout_2;
	}

	public HorizontalLayout getTopHorizontalLayout() {
		return topHorizontalLayout;
	}
	
	
}
