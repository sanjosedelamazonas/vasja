package org.sanjose.web.layout;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.Upload;
import com.vaadin.ui.VerticalLayout;

public class ImportLayout extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout importVerticalLayout;
	@AutoGenerated
	private Button clearLogButton;
	@AutoGenerated
	private HorizontalLayout logHorizontalLayout;
	@AutoGenerated
	private TextArea logTextArea;
	@AutoGenerated
	private HorizontalLayout operacionesHorizontalLayout;
	@AutoGenerated
	private Upload uploadOperaciones;
	@AutoGenerated
	private Label labelOperaciones;
	@AutoGenerated
	private HorizontalLayout cuentasHorizontalLayout;
	@AutoGenerated
	private Upload uploadCuentas;
	@AutoGenerated
	private Label labelCuentas;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public TextArea getLogTextArea() {
		return logTextArea;
	}

	public Upload getUploadOperaciones() {
		return uploadOperaciones;
	}

	public Upload getUploadCuentas() {
		return uploadCuentas;
	}

	public Button getClearLogButton() {
		return clearLogButton;
	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ImportLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// importVerticalLayout
		importVerticalLayout = buildImportVerticalLayout();
		mainLayout.addComponent(importVerticalLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildImportVerticalLayout() {
		// common part: create layout
		importVerticalLayout = new VerticalLayout();
		importVerticalLayout.setImmediate(false);
		importVerticalLayout.setWidth("-1px");
		importVerticalLayout.setHeight("-1px");
		importVerticalLayout.setMargin(false);
		
		// cuentasHorizontalLayout
		cuentasHorizontalLayout = buildCuentasHorizontalLayout();
		importVerticalLayout.addComponent(cuentasHorizontalLayout);
		importVerticalLayout.setComponentAlignment(cuentasHorizontalLayout,
				new Alignment(48));
		
		// operacionesHorizontalLayout
		operacionesHorizontalLayout = buildOperacionesHorizontalLayout();
		importVerticalLayout.addComponent(operacionesHorizontalLayout);
		importVerticalLayout.setComponentAlignment(operacionesHorizontalLayout,
				new Alignment(48));
		
		// logHorizontalLayout
		logHorizontalLayout = buildLogHorizontalLayout();
		importVerticalLayout.addComponent(logHorizontalLayout);
		importVerticalLayout.setExpandRatio(logHorizontalLayout, 1.0f);
		importVerticalLayout.setComponentAlignment(logHorizontalLayout,
				new Alignment(48));
		
		// clearLogButton
		clearLogButton = new Button();
		clearLogButton.setCaption("Eliminar log");
		clearLogButton.setImmediate(true);
		clearLogButton.setWidth("-1px");
		clearLogButton.setHeight("-1px");
		importVerticalLayout.addComponent(clearLogButton);
		importVerticalLayout.setComponentAlignment(clearLogButton,
				new Alignment(48));
		
		return importVerticalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildCuentasHorizontalLayout() {
		// common part: create layout
		cuentasHorizontalLayout = new HorizontalLayout();
		cuentasHorizontalLayout.setImmediate(false);
		cuentasHorizontalLayout.setWidth("-1px");
		cuentasHorizontalLayout.setHeight("-1px");
		cuentasHorizontalLayout.setMargin(true);
		cuentasHorizontalLayout.setSpacing(true);
		
		// labelCuentas
		labelCuentas = new Label();
		labelCuentas.setImmediate(false);
		labelCuentas.setWidth("150px");
		labelCuentas.setHeight("-1px");
		labelCuentas.setValue("Importar cuentas");
		cuentasHorizontalLayout.addComponent(labelCuentas);
		cuentasHorizontalLayout.setComponentAlignment(labelCuentas,
				new Alignment(48));
		
		// uploadCuentas
		uploadCuentas = new Upload();
		uploadCuentas.setImmediate(false);
		uploadCuentas.setWidth("-1px");
		uploadCuentas.setHeight("-1px");
		cuentasHorizontalLayout.addComponent(uploadCuentas);
		cuentasHorizontalLayout.setComponentAlignment(uploadCuentas,
				new Alignment(34));
		
		return cuentasHorizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildOperacionesHorizontalLayout() {
		// common part: create layout
		operacionesHorizontalLayout = new HorizontalLayout();
		operacionesHorizontalLayout.setImmediate(false);
		operacionesHorizontalLayout.setWidth("-1px");
		operacionesHorizontalLayout.setHeight("-1px");
		operacionesHorizontalLayout.setMargin(true);
		operacionesHorizontalLayout.setSpacing(true);
		
		// labelOperaciones
		labelOperaciones = new Label();
		labelOperaciones.setImmediate(false);
		labelOperaciones.setWidth("150px");
		labelOperaciones.setHeight("-1px");
		labelOperaciones.setValue("Importar operaciones");
		operacionesHorizontalLayout.addComponent(labelOperaciones);
		operacionesHorizontalLayout.setComponentAlignment(labelOperaciones,
				new Alignment(48));
		
		// uploadOperaciones
		uploadOperaciones = new Upload();
		uploadOperaciones.setImmediate(false);
		uploadOperaciones.setWidth("-1px");
		uploadOperaciones.setHeight("-1px");
		operacionesHorizontalLayout.addComponent(uploadOperaciones);
		operacionesHorizontalLayout.setComponentAlignment(uploadOperaciones,
				new Alignment(34));
		
		return operacionesHorizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildLogHorizontalLayout() {
		// common part: create layout
		logHorizontalLayout = new HorizontalLayout();
		logHorizontalLayout.setImmediate(false);
		logHorizontalLayout.setWidth("-1px");
		logHorizontalLayout.setHeight("-1px");
		logHorizontalLayout.setMargin(true);
		logHorizontalLayout.setSpacing(true);
		
		// logTextArea
		logTextArea = new TextArea();
		logTextArea.setImmediate(false);
		logTextArea.setWidth("650px");
		logTextArea.setHeight("400px");
		logTextArea.setNullRepresentation("\"\"");
		logHorizontalLayout.addComponent(logTextArea);
		logHorizontalLayout.setExpandRatio(logTextArea, 1.0f);
		logHorizontalLayout.setComponentAlignment(logTextArea,
				new Alignment(48));
		
		return logHorizontalLayout;
	}

}
