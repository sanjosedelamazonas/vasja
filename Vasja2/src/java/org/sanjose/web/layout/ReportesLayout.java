package org.sanjose.web.layout;

import java.util.Arrays;
import java.util.Iterator;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.VerticalLayout;

public class ReportesLayout extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout mensualHorizontalLayout;
	@AutoGenerated
	private Button printMensualButton;
	@AutoGenerated
	private OptionGroup mensualOptionGroup;
	@AutoGenerated
	private ComboBox categoriaCombo;
	@AutoGenerated
	private PopupDateField mensualDateField;
	@AutoGenerated
	private Label mesLabel;
	@AutoGenerated
	private HorizontalLayout cajaHorizLayout;
	@AutoGenerated
	private Button printCajaButton;
	@AutoGenerated
	private OptionGroup cajaFormatOptionGroup;
	@AutoGenerated
	private OptionGroup cajaOptionGroup;
	@AutoGenerated
	private PopupDateField cajaFechaMinField;
	@AutoGenerated
	private Label cajaLabel;
	@AutoGenerated
	private HorizontalLayout bancariasHorLayout;
	@AutoGenerated
	private Button printBancarioButton;
	@AutoGenerated
	private OptionGroup formatOptionGroup;
	@AutoGenerated
	private ComboBox groupingCombo;
	@AutoGenerated
	private OptionGroup monedaGroup;
	@AutoGenerated
	private PopupDateField fechaMaxField;
	@AutoGenerated
	private Label alLabel;
	@AutoGenerated
	private PopupDateField fechaMinField;
	@AutoGenerated
	private Label reportLabel;
	
	private HorizontalLayout ccHorizontalLayout;
	private Button printCCButton;
	private OptionGroup formatCCOptionGroup;
	private OptionGroup monedaCCGroup;
	private PopupDateField CCfechaMaxField;
	private Label CCLabel;
	private PopupDateField CCfechaMinField;
	private Label CCreportLabel;
	private ComboBox groupingCCCombo;
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	public ComboBox getGroupingCCCombo() {
		return groupingCCCombo;
	}

	public void setGroupingCCCombo(ComboBox groupingCCCombo) {
		this.groupingCCCombo = groupingCCCombo;
	}

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	List<String> currencies = Arrays.asList(new String[] { "PEN", "USD" });
	List<String> formats = Arrays.asList(new String[] { "PDF", "HTML", "XLS" });
	List<String> groupings = Arrays
			.asList(new String[] { "Detallado por centro de costo","Entregas a rendir", "Informe resumido por centro de costo",
					"Detallado por cuenta contable",
					"Detallado por rubro institucional", 
					"Informe resumido por cuenta contable",
					"Informe resumido por rubro institucional"});
	List<String> groupingsCC = Arrays
			.asList(new String[] { "NO GROUPING", "POR CATEGORIA", "POR CUENTA" });

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ReportesLayout() {
		buildMainLayout();
		cajaOptionGroup.setContainerDataSource(toContainer(currencies));
		cajaOptionGroup.select("PEN");
		cajaOptionGroup.setNullSelectionAllowed(false);
		
	/*	monedaGroup.setCaption("Moneda");
		monedaGroup.setContainerDataSource(toContainer(currencies));
		monedaGroup.select("PEN");
		monedaGroup.setNullSelectionAllowed(false);*/
		
		monedaCCGroup.setCaption("Moneda");
		monedaCCGroup.setContainerDataSource(toContainer(currencies));
		monedaCCGroup.select("PEN");
		monedaCCGroup.setNullSelectionAllowed(false);
		
		formatCCOptionGroup.setCaption("Formato");
		formatCCOptionGroup.setContainerDataSource(toContainer(formats));
		formatCCOptionGroup.select("PDF");
		
		formatOptionGroup.setCaption("Formato");
		formatOptionGroup.setContainerDataSource(toContainer(formats));
		formatOptionGroup.select("PDF");
		
		cajaFormatOptionGroup.setCaption("Formato");
		cajaFormatOptionGroup.setContainerDataSource(toContainer(formats));
		cajaFormatOptionGroup.select("PDF"); 
		
		mensualOptionGroup.setCaption("Formato");
		mensualOptionGroup.setContainerDataSource(toContainer(formats));
		mensualOptionGroup.select("PDF"); 	
		
		groupingCombo.setContainerDataSource(toContainer(groupings));
		
		groupingCCCombo.setContainerDataSource(toContainer(groupingsCC));	
		groupingCCCombo.select("POR CUENTA");
		
		setCompositionRoot(mainLayout);		
		// TODO add user code here
	}

	public Container toContainer(List<String> list) {
		Container c = new IndexedContainer();
		if (list!=null) {
			for (final Iterator<?> i = list.iterator(); i.hasNext();) {
            c.addItem(i.next());
			}
		}
		return c;
    }

	public PopupDateField getFechaMaxField() {
		return fechaMaxField;
	}

	public void setFechaMaxField(PopupDateField fechaMaxField) {
		this.fechaMaxField = fechaMaxField;
	}

	public PopupDateField getFechaMinField() {
		return fechaMinField;
	}

	public void setFechaMinField(PopupDateField fechaMinField) {
		this.fechaMinField = fechaMinField;
	}

	public Label getReportLabel() {
		return reportLabel;
	}

	public void setReportLabel(Label reportLabel) {
		this.reportLabel = reportLabel;
	}

	public Button getPrintCajaButton() {
		return printCajaButton;
	}

	public void setPrintCajaButton(Button printCajaButton) {
		this.printCajaButton = printCajaButton;
	}

	public OptionGroup getCajaFormatOptionGroup() {
		return cajaFormatOptionGroup;
	}

	public void setCajaFormatOptionGroup(OptionGroup cajaFormatOptionGroup) {
		this.cajaFormatOptionGroup = cajaFormatOptionGroup;
	}

	public OptionGroup getCajaOptionGroup() {
		return cajaOptionGroup;
	}

	public void setCajaOptionGroup(OptionGroup cajaOptionGroup) {
		this.cajaOptionGroup = cajaOptionGroup;
	}

	public PopupDateField getCajaFechaMinField() {
		return cajaFechaMinField;
	}

	public void setCajaFechaMinField(PopupDateField cajaFechaMinField) {
		this.cajaFechaMinField = cajaFechaMinField;
	}

	public Button getPrintBancarioButton() {
		return printBancarioButton;
	}

	public void setPrintBancarioButton(Button printBancarioButton) {
		this.printBancarioButton = printBancarioButton;
	}

	public OptionGroup getFormatOptionGroup() {
		return formatOptionGroup;
	}

	public void setFormatOptionGroup(OptionGroup formatOptionGroup) {
		this.formatOptionGroup = formatOptionGroup;
	}

	public ComboBox getGroupingCombo() {
		return groupingCombo;
	}

	public void setGroupingCombo(ComboBox groupingCombo) {
		this.groupingCombo = groupingCombo;
	}

	public OptionGroup getMonedaGroup() {
		return monedaGroup;
	}

	public void setMonedaGroup(OptionGroup monedaGroup) {
		this.monedaGroup = monedaGroup;
	}

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}
	
	public Button getPrintMensualButton() {
		return printMensualButton;
	}

	public OptionGroup getMensualOptionGroup() {
		return mensualOptionGroup;
	}

	public ComboBox getCategoriaCombo() {
		return categoriaCombo;
	}

	public PopupDateField getMensualDateField() {
		return mensualDateField;
	}
	
	
	public HorizontalLayout getCcHorizontalLayout() {
		return ccHorizontalLayout;
	}

	public void setCcHorizontalLayout(HorizontalLayout ccHorizontalLayout) {
		this.ccHorizontalLayout = ccHorizontalLayout;
	}

	public Button getPrintCCButton() {
		return printCCButton;
	}

	public void setPrintCCButton(Button printCCButton) {
		this.printCCButton = printCCButton;
	}

	public OptionGroup getFormatCCOptionGroup() {
		return formatCCOptionGroup;
	}

	public void setFormatCCOptionGroup(OptionGroup formatCCOptionGroup) {
		this.formatCCOptionGroup = formatCCOptionGroup;
	}

	public OptionGroup getMonedaCCGroup() {
		return monedaCCGroup;
	}

	public void setMonedaCCGroup(OptionGroup monedaCCGroup) {
		this.monedaCCGroup = monedaCCGroup;
	}

	public PopupDateField getCCfechaMaxField() {
		return CCfechaMaxField;
	}

	public void setCCfechaMaxField(PopupDateField cCfechaMaxField) {
		CCfechaMaxField = cCfechaMaxField;
	}

	public Label getCCLabel() {
		return CCLabel;
	}

	public void setCCLabel(Label cCLabel) {
		CCLabel = cCLabel;
	}

	public PopupDateField getCCfechaMinField() {
		return CCfechaMinField;
	}

	public void setCCfechaMinField(PopupDateField cCfechaMinField) {
		CCfechaMinField = cCfechaMinField;
	}

	public Label getCCreportLabel() {
		return CCreportLabel;
	}

	public void setCCreportLabel(Label cCreportLabel) {
		CCreportLabel = cCreportLabel;
	}


	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// bancariasHorLayout
		bancariasHorLayout = buildBancariasHorLayout();
		mainLayout.addComponent(bancariasHorLayout);
		mainLayout.setComponentAlignment(bancariasHorLayout, new Alignment(48));
		
		// cajaHorizLayout
		cajaHorizLayout = buildCajaHorizLayout();
		mainLayout.addComponent(cajaHorizLayout);
		mainLayout.setComponentAlignment(cajaHorizLayout, new Alignment(48));
		
		// mensualHorizontalLayout
		mensualHorizontalLayout = buildMensualHorizontalLayout();
		mainLayout.addComponent(mensualHorizontalLayout);
		mainLayout.setComponentAlignment(mensualHorizontalLayout,
				new Alignment(48));
		

		// ccHorizontalLayout
		ccHorizontalLayout = buildCcHorizontalLayout();
		mainLayout.addComponent(ccHorizontalLayout);
		mainLayout.setComponentAlignment(ccHorizontalLayout, new Alignment(48));
		return mainLayout;
	}

	
	@AutoGenerated
	private HorizontalLayout buildCcHorizontalLayout() {
		// common part: create layout
		ccHorizontalLayout = new HorizontalLayout();
		ccHorizontalLayout.setCaption("Reporte por centro de costos ");
		ccHorizontalLayout.setImmediate(false);
		ccHorizontalLayout.setWidth("700px");
		ccHorizontalLayout.setHeight("-1px");
		ccHorizontalLayout.setMargin(true);
		ccHorizontalLayout.setSpacing(true);
		
		// reportLabel
		CCLabel = new Label();
		CCLabel.setImmediate(false);
		CCLabel.setWidth("-1px");
		CCLabel.setHeight("-1px");
		CCLabel.setValue("Del:");
		ccHorizontalLayout.addComponent(CCLabel);
		ccHorizontalLayout
				.setComponentAlignment(CCLabel, new Alignment(48));
		
		// fechaMinField
		CCfechaMinField = new PopupDateField();
		CCfechaMinField.setImmediate(false);
		CCfechaMinField.setWidth("-1px");
		CCfechaMinField.setHeight("-1px");
		CCfechaMinField.setInvalidAllowed(false);
		CCfechaMinField.setRequired(true);
		CCfechaMinField.setResolution(4);
		ccHorizontalLayout.addComponent(CCfechaMinField);
		ccHorizontalLayout.setComponentAlignment(CCfechaMinField, new Alignment(
				48));
		
		// alLabel
		alLabel = new Label();
		alLabel.setImmediate(false);
		alLabel.setWidth("-1px");
		alLabel.setHeight("-1px");
		alLabel.setValue("Al: ");
		ccHorizontalLayout.addComponent(alLabel);
		ccHorizontalLayout.setComponentAlignment(alLabel, new Alignment(48));
		
		// fechaMaxField
		CCfechaMaxField = new PopupDateField();
		CCfechaMaxField.setImmediate(false);
		CCfechaMaxField.setWidth("-1px");
		CCfechaMaxField.setHeight("-1px");
		CCfechaMaxField.setInvalidAllowed(false);
		CCfechaMaxField.setRequired(true);
		CCfechaMaxField.setResolution(4);
		ccHorizontalLayout.addComponent(CCfechaMaxField);
		ccHorizontalLayout.setComponentAlignment(CCfechaMaxField, new Alignment(
				48));
		
	// monedaGroup
		monedaCCGroup = new OptionGroup();
		monedaCCGroup.setImmediate(false);
		monedaCCGroup.setWidth("-1px");
		monedaCCGroup.setHeight("-1px");
	//	ccHorizontalLayout.addComponent(monedaCCGroup); 
		
		// groupingCombo
		groupingCCCombo = new ComboBox();
		groupingCCCombo.setImmediate(false);
		groupingCCCombo.setWidth("10.0em");
		groupingCCCombo.setHeight("-1px");
		ccHorizontalLayout.addComponent(groupingCCCombo);
		ccHorizontalLayout.setComponentAlignment(groupingCCCombo, new Alignment(
						48));
						
		// formatOptionGroup
		formatCCOptionGroup = new OptionGroup();
		formatCCOptionGroup.setImmediate(false);
		formatCCOptionGroup.setWidth("-1px");
		formatCCOptionGroup.setHeight("-1px");
		ccHorizontalLayout.addComponent(formatCCOptionGroup);
		ccHorizontalLayout.setComponentAlignment(formatCCOptionGroup,
				new Alignment(48));
		
		
		// printBancarioButton
		printCCButton = new Button();
		printCCButton.setCaption("Ver reporte");
		printCCButton.setIcon(new ThemeResource(
				"../icons/window_text.png"));
		printCCButton.setImmediate(true);
		printCCButton.setWidth("-1px");
		printCCButton.setHeight("-1px");
		ccHorizontalLayout.addComponent(printCCButton);
		ccHorizontalLayout.setComponentAlignment(printCCButton,
				new Alignment(34));
		
		return ccHorizontalLayout;
	}
	
	@AutoGenerated
	private HorizontalLayout buildBancariasHorLayout() {
		// common part: create layout
		bancariasHorLayout = new HorizontalLayout();
		bancariasHorLayout.setCaption("Reporte por lugar de gasto ");
		bancariasHorLayout.setImmediate(false);
		bancariasHorLayout.setWidth("700px");
		bancariasHorLayout.setHeight("-1px");
		bancariasHorLayout.setMargin(true);
		bancariasHorLayout.setSpacing(true);
		
		// reportLabel
		reportLabel = new Label();
		reportLabel.setImmediate(false);
		reportLabel.setWidth("-1px");
		reportLabel.setHeight("-1px");
		reportLabel.setValue("Del:");
		bancariasHorLayout.addComponent(reportLabel);
		bancariasHorLayout
				.setComponentAlignment(reportLabel, new Alignment(48));
		
		// fechaMinField
		fechaMinField = new PopupDateField();
		fechaMinField.setImmediate(false);
		fechaMinField.setWidth("-1px");
		fechaMinField.setHeight("-1px");
		fechaMinField.setInvalidAllowed(false);
		fechaMinField.setRequired(true);
		fechaMinField.setResolution(4);
		bancariasHorLayout.addComponent(fechaMinField);
		bancariasHorLayout.setComponentAlignment(fechaMinField, new Alignment(
				48));
		
		// alLabel
		alLabel = new Label();
		alLabel.setImmediate(false);
		alLabel.setWidth("-1px");
		alLabel.setHeight("-1px");
		alLabel.setValue("Al: ");
		bancariasHorLayout.addComponent(alLabel);
		bancariasHorLayout.setComponentAlignment(alLabel, new Alignment(48));
		
		// fechaMaxField
		fechaMaxField = new PopupDateField();
		fechaMaxField.setImmediate(false);
		fechaMaxField.setWidth("-1px");
		fechaMaxField.setHeight("-1px");
		fechaMaxField.setInvalidAllowed(false);
		fechaMaxField.setRequired(true);
		fechaMaxField.setResolution(4);
		bancariasHorLayout.addComponent(fechaMaxField);
		bancariasHorLayout.setComponentAlignment(fechaMaxField, new Alignment(
				48));
		
		/* monedaGroup
		monedaGroup = new OptionGroup();
		monedaGroup.setImmediate(false);
		monedaGroup.setWidth("-1px");
		monedaGroup.setHeight("-1px");
		bancariasHorLayout.addComponent(monedaGroup); */
		
		// groupingCombo
		groupingCombo = new ComboBox();
		groupingCombo.setImmediate(false);
		groupingCombo.setWidth("10.0em");
		groupingCombo.setHeight("-1px");
		bancariasHorLayout.addComponent(groupingCombo);
		bancariasHorLayout.setComponentAlignment(groupingCombo, new Alignment(
				48));
		
		// formatOptionGroup
		formatOptionGroup = new OptionGroup();
		formatOptionGroup.setImmediate(false);
		formatOptionGroup.setWidth("-1px");
		formatOptionGroup.setHeight("-1px");
		bancariasHorLayout.addComponent(formatOptionGroup);
		bancariasHorLayout.setComponentAlignment(formatOptionGroup,
				new Alignment(48));
		
		// printBancarioButton
		printBancarioButton = new Button();
		printBancarioButton.setCaption("Ver reporte");
		printBancarioButton.setIcon(new ThemeResource(
				"../icons/window_text.png"));
		printBancarioButton.setImmediate(true);
		printBancarioButton.setWidth("-1px");
		printBancarioButton.setHeight("-1px");
		bancariasHorLayout.addComponent(printBancarioButton);
		bancariasHorLayout.setComponentAlignment(printBancarioButton,
				new Alignment(34));
		
		return bancariasHorLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildCajaHorizLayout() {
		// common part: create layout
		cajaHorizLayout = new HorizontalLayout();
		cajaHorizLayout.setCaption("Diario de caja");
		cajaHorizLayout.setImmediate(false);
		cajaHorizLayout.setWidth("700px");
		cajaHorizLayout.setHeight("-1px");
		cajaHorizLayout.setMargin(true);
		cajaHorizLayout.setSpacing(true);
		
		// cajaLabel
		cajaLabel = new Label();
		cajaLabel.setImmediate(false);
		cajaLabel.setWidth("-1px");
		cajaLabel.setHeight("-1px");
		cajaLabel.setValue("Seleccione el dia");
		cajaHorizLayout.addComponent(cajaLabel);
		cajaHorizLayout.setComponentAlignment(cajaLabel, new Alignment(33));
		
		// cajaFechaMinField
		cajaFechaMinField = new PopupDateField();
		cajaFechaMinField.setImmediate(false);
		cajaFechaMinField.setWidth("-1px");
		cajaFechaMinField.setHeight("-1px");
		cajaFechaMinField.setInvalidAllowed(false);
		cajaFechaMinField.setReadThrough(false);
		cajaFechaMinField.setWriteThrough(false);
		cajaFechaMinField.setRequired(true);
		cajaFechaMinField.setResolution(4);
		cajaHorizLayout.addComponent(cajaFechaMinField);
		cajaHorizLayout.setComponentAlignment(cajaFechaMinField, new Alignment(
				48));
		
		// cajaOptionGroup
		cajaOptionGroup = new OptionGroup();
		cajaOptionGroup.setImmediate(false);
		cajaOptionGroup.setWidth("-1px");
		cajaOptionGroup.setHeight("-1px");
		cajaHorizLayout.addComponent(cajaOptionGroup);
		cajaHorizLayout.setComponentAlignment(cajaOptionGroup,
				new Alignment(48));
		
		// cajaFormatOptionGroup
		cajaFormatOptionGroup = new OptionGroup();
		cajaFormatOptionGroup.setImmediate(false);
		cajaFormatOptionGroup.setWidth("-1px");
		cajaFormatOptionGroup.setHeight("-1px");
		cajaHorizLayout.addComponent(cajaFormatOptionGroup);
		cajaHorizLayout.setComponentAlignment(cajaFormatOptionGroup,
				new Alignment(48));
		
		// printCajaButton
		printCajaButton = new Button();
		printCajaButton.setCaption("Ver reporte");
		printCajaButton.setIcon(new ThemeResource("../icons/window_text.png"));
		printCajaButton.setImmediate(true);
		printCajaButton.setWidth("-1px");
		printCajaButton.setHeight("-1px");
		cajaHorizLayout.addComponent(printCajaButton);
		cajaHorizLayout.setComponentAlignment(printCajaButton,
				new Alignment(34));
		
		return cajaHorizLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildMensualHorizontalLayout() {
		// common part: create layout
		mensualHorizontalLayout = new HorizontalLayout();
		mensualHorizontalLayout
				.setCaption("Listado general de cuentas con saldos");
		mensualHorizontalLayout.setImmediate(false);
		mensualHorizontalLayout.setWidth("700px");
		mensualHorizontalLayout.setHeight("-1px");
		mensualHorizontalLayout.setMargin(true);
		mensualHorizontalLayout.setSpacing(true);
		
		// mesLabel
		mesLabel = new Label();
		mesLabel.setImmediate(false);
		mesLabel.setWidth("-1px");
		mesLabel.setHeight("-1px");
		mesLabel.setValue("Seleccione el mes");
		mensualHorizontalLayout.addComponent(mesLabel);
		mensualHorizontalLayout.setComponentAlignment(mesLabel, new Alignment(
				33));
		
		// mensualDateField
		mensualDateField = new PopupDateField();
		mensualDateField.setImmediate(false);
		mensualDateField.setWidth("-1px");
		mensualDateField.setHeight("-1px");
		mensualDateField.setInvalidAllowed(false);
		mensualDateField.setRequired(true);
		mensualDateField.setResolution(5);
		mensualHorizontalLayout.addComponent(mensualDateField);
		mensualHorizontalLayout.setComponentAlignment(mensualDateField,
				new Alignment(33));
		
		// categoriaCombo
		categoriaCombo = new ComboBox();
		categoriaCombo.setImmediate(false);
		categoriaCombo.setWidth("16.0em");
		categoriaCombo.setHeight("-1px");
		categoriaCombo.setRequired(true);
		mensualHorizontalLayout.addComponent(categoriaCombo);
		mensualHorizontalLayout.setComponentAlignment(categoriaCombo,
				new Alignment(48));
		
		// mensualOptionGroup
		mensualOptionGroup = new OptionGroup();
		mensualOptionGroup.setImmediate(false);
		mensualOptionGroup.setWidth("-1px");
		mensualOptionGroup.setHeight("-1px");
		mensualHorizontalLayout.addComponent(mensualOptionGroup);
		mensualHorizontalLayout.setComponentAlignment(mensualOptionGroup,
				new Alignment(48));
		
		// printMensualButton
		printMensualButton = new Button();
		printMensualButton.setCaption("Ver reporte");
		printMensualButton
				.setIcon(new ThemeResource("../icons/window_text.png"));
		printMensualButton.setImmediate(true);
		printMensualButton.setWidth("-1px");
		printMensualButton.setHeight("-1px");
		mensualHorizontalLayout.addComponent(printMensualButton);
		mensualHorizontalLayout.setComponentAlignment(printMensualButton,
				new Alignment(34));
		
		return mensualHorizontalLayout;
	}

}
