package org.sanjose.web.layout;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;

public class CuentaFilterLayout extends CustomComponent {

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private Button removeFilter;
	@AutoGenerated
	private Button selectAll;
	@AutoGenerated
	private ComboBox propietarioFilter;
	@AutoGenerated
	private ComboBox usuarioFilter;
	@AutoGenerated
	private ComboBox categoriaFilter;
	@AutoGenerated
	private TextField nombreFilter;
	@AutoGenerated
	private TextField numeroFilter;
	
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public Button getRemoveFilter() {
		return removeFilter;
	}

	public void setRemoveFilter(Button removeFilter) {
		this.removeFilter = removeFilter;
	}

	public Button getSelectAll() {
		return selectAll;
	}

	public void setSelectAll(Button selectAll) {
		this.selectAll = selectAll;
	}

	public ComboBox getPropietarioFilter() {
		return propietarioFilter;
	}

	public void setPropietarioFilter(ComboBox propietarioFilter) {
		this.propietarioFilter = propietarioFilter;
	}

	public ComboBox getUsuarioFilter() {
		return usuarioFilter;
	}

	public void setUsuarioFilter(ComboBox usuarioFilter) {
		this.usuarioFilter = usuarioFilter;
	}

	public ComboBox getCategoriaFilter() {
		return categoriaFilter;
	}

	public void setCategoriaFilter(ComboBox categoriaFilter) {
		this.categoriaFilter = categoriaFilter;
	}

	public TextField getNombreFilter() {
		return nombreFilter;
	}

	public void setNombreFilter(TextField nombreFilter) {
		this.nombreFilter = nombreFilter;
	}

	
	public TextField getNumeroFilter() {
		return numeroFilter;
	}

	public void setNumeroFilter(TextField numeroFilter) {
		this.numeroFilter = numeroFilter;
	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CuentaFilterLayout() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("40px");
		
		// nombreFilter
		numeroFilter = new TextField();
		numeroFilter.setImmediate(false);
		numeroFilter.setWidth("10.0em");
		numeroFilter.setHeight("-1px");
		numeroFilter.setSecret(false);
		mainLayout.addComponent(numeroFilter);
		
		// nombreFilter
		nombreFilter = new TextField();
		nombreFilter.setImmediate(false);
		nombreFilter.setWidth("10.0em");
		nombreFilter.setHeight("-1px");
		nombreFilter.setSecret(false);
		mainLayout.addComponent(nombreFilter);
		
		// categoriaFilter
		categoriaFilter = new ComboBox();
		categoriaFilter.setImmediate(false);
		categoriaFilter.setWidth("10.0em");
		categoriaFilter.setHeight("-1px");
		mainLayout.addComponent(categoriaFilter);
		
		// usuarioFilter
		usuarioFilter = new ComboBox();
		usuarioFilter.setImmediate(false);
		usuarioFilter.setWidth("10.0em");
		usuarioFilter.setHeight("-1px");
		mainLayout.addComponent(usuarioFilter);
		
		// propietarioFilter
		propietarioFilter = new ComboBox();
		propietarioFilter.setImmediate(false);
		propietarioFilter.setWidth("10.0em");
		propietarioFilter.setHeight("-1px");
		mainLayout.addComponent(propietarioFilter);
		
		// removeFilter
		removeFilter = new Button();
		removeFilter.setCaption("Eliminar filtros");
		removeFilter.setImmediate(false);
		removeFilter.setWidth("10.0em");
		removeFilter.setHeight("-1px");
		mainLayout.addComponent(removeFilter);

		// removeFilter
		selectAll = new Button();
		selectAll.setCaption("SEL");
		selectAll.setImmediate(false);
		selectAll.setWidth("6.0em");
		selectAll.setHeight("-1px");
		mainLayout.addComponent(selectAll);
		mainLayout.setComponentAlignment(selectAll, Alignment.TOP_RIGHT);

		return mainLayout;
	}

}
