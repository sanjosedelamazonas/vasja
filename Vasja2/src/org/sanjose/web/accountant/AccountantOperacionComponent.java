package org.sanjose.web.accountant;

import org.sanjose.util.ConfigurationUtil;
import org.sanjose.web.helper.OperacionesTable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;

public class AccountantOperacionComponent extends CustomComponent {

	public OperacionesTable getOperacionesTable() {
		return operacionesTable;
	}

	public void setOperacionesTable(OperacionesTable operacionesTable) {
		this.operacionesTable = operacionesTable;
	}

	public Button getCerrarButton() {
		return cerrarButton;
	}

	public void setCerrarButton(Button cerrarButton) {
		this.cerrarButton = cerrarButton;
	}

	public Button getAbonoButton() {
		return abonoButton;
	}

	public void setAbonoButton(Button abonoButton) {
		this.abonoButton = abonoButton;
	}

	public Button getCargoButton() {
		return cargoButton;
	}

	public void setCargoButton(Button cargoButton) {
		this.cargoButton = cargoButton;
	}

	public VerticalLayout getVerticalCuentaLayout() {
		return verticalCuentaLayout;
	}

	public void setVerticalCuentaLayout(VerticalLayout verticalCuentaLayout) {
		this.verticalCuentaLayout = verticalCuentaLayout;
	}

	public Label getCuentaDolaresValue() {
		return cuentaDolaresValue;
	}

	public void setCuentaDolaresValue(Label cuentaDolaresValue) {
		this.cuentaDolaresValue = cuentaDolaresValue;
	}

	public Label getCuentaSolesValue() {
		return cuentaSolesValue;
	}

	public void setCuentaSolesValue(Label cuentaSolesValue) {
		this.cuentaSolesValue = cuentaSolesValue;
	}

	public Label getCuentaNombreValue() {
		return cuentaNombreValue;
	}

	public void setCuentaNombreValue(Label cuentaNombreValue) {
		this.cuentaNombreValue = cuentaNombreValue;
	}

	public Label getCuentaDolares() {
		return cuentaDolares;
	}

	public void setCuentaDolares(Label cuentaDolares) {
		this.cuentaDolares = cuentaDolares;
	}

	public Label getCuentaSoles() {
		return cuentaSoles;
	}

	public void setCuentaSoles(Label cuentaSoles) {
		this.cuentaSoles = cuentaSoles;
	}

	public Label getCuentaNombre() {
		return cuentaNombre;
	}

	public void setCuentaNombre(Label cuentaNombre) {
		this.cuentaNombre = cuentaNombre;
	}

	public ComboBox getCuentas() {
		return cuentas;
	}

	public void setCuentas(ComboBox cuentas) {
		this.cuentas = cuentas;
	}
	
	public Label getCuentaPropietarioValue() {
		return cuentaPropietarioValue;
	}

	public void setCuentaPropietarioValue(Label cuentaPropietarioValue) {
		this.cuentaPropietarioValue = cuentaPropietarioValue;
	}

	public Label getCuentaPropietario() {
		return cuentaPropietario;
	}

	public void setCuentaPropietario(Label cuentaPropietario) {
		this.cuentaPropietario = cuentaPropietario;
	}


	public Button getCuentaReporteButton() {
		return cuentaReporteButton;
	}

	public void setCuentaReporteButton(Button cuentaReporteButton) {
		this.cuentaReporteButton = cuentaReporteButton;
	}
	public Label getCuentaRubro() {
		return cuentaRubro;
	}

	public void setCuentaRubro(Label cuentaRubro) {
		this.cuentaRubro = cuentaRubro;
	}

	public Label getCuentaRubroValue() {
		return cuentaRubroValue;
	}

	public void setCuentaRubroValue(Label cuentaRubroValue) {
		this.cuentaRubroValue = cuentaRubroValue;
	}

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel operacionesPanel = null;
	@AutoGenerated
	private VerticalLayout verticalOperacionesLayout;
	@AutoGenerated
	private OperacionesTable operacionesTable;
	@AutoGenerated
	private HorizontalLayout horizontalLayoutTop;
	@AutoGenerated
	private VerticalLayout verticalButtonsLayout;
	@AutoGenerated
	private VerticalLayout verticalReportButtonLayout;
	@AutoGenerated
	private Button cerrarButton = null;
	@AutoGenerated
	private Button reportesButton = null;
	@AutoGenerated
	private Button cuentaReporteButton = null;
	@AutoGenerated
	private Button abonoButton = null;
	@AutoGenerated
	private Button cargoButton = null;
	@AutoGenerated
	private VerticalLayout verticalCuentaLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLabelsLayout;
	@AutoGenerated
	private VerticalLayout verticalValuesLayout;
	@AutoGenerated
	private Label cuentaDolaresValue;
	@AutoGenerated
	private Label cuentaSolesValue;
	@AutoGenerated
	private Label cuentaNombreValue;
	@AutoGenerated
	private Label cuentaPropietarioValue;
	@AutoGenerated
	private Label cuentaRubroValue;
	@AutoGenerated
	private VerticalLayout verticalCaptionLayout;
	@AutoGenerated
	private Label cuentaDolares;
	@AutoGenerated
	private Label cuentaSoles;
	@AutoGenerated
	private Label cuentaNombre;
	@AutoGenerated
	private Label cuentaRubro;
	@AutoGenerated
	private Label cuentaPropietario;
	@AutoGenerated
	private ComboBox cuentas;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public VerticalLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(VerticalLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public Button getReportesButton() {
		return reportesButton;
	}

	public void setReportesButton(Button reportesButton) {
		this.reportesButton = reportesButton;
	}

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AccountantOperacionComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}
	
	public void drawCuentaLabels() {
		if (horizontalLayoutTop!=null && horizontalLayoutTop.getComponentIndex(verticalReportButtonLayout)>-1)
			horizontalLayoutTop.removeComponent(verticalReportButtonLayout);
		
		verticalCuentaLayout.removeAllComponents();
		//verticalCuentaLayout.addComponent(cuentas);
		// horizontalLabelsLayout
		horizontalLabelsLayout = buildHorizontalLabelsLayout();
		verticalCuentaLayout.addComponent(horizontalLabelsLayout);
		if (operacionesPanel == null) {
			operacionesPanel = buildOperacionesPanel();
		}
	}
	
	public void drawCuentaSelection() {
		if (mainLayout.getComponentIndex(operacionesPanel)>-1) 
			mainLayout.removeComponent(operacionesPanel);
		if (horizontalLayoutTop!=null && horizontalLayoutTop.getComponentIndex(verticalButtonsLayout)>-1)
			horizontalLayoutTop.removeComponent(verticalButtonsLayout);
		verticalReportButtonLayout = buildVerticalReportButtonLayout();
		horizontalLayoutTop.addComponent(verticalReportButtonLayout);
		
		verticalCuentaLayout.removeAllComponents();
		cuentas.setValue(null);
		verticalCuentaLayout.addComponent(cuentas);
		cuentas.focus();		
	}
	
	public void drawOperaciones() {
		mainLayout.addComponent(operacionesPanel);
		mainLayout.setExpandRatio(operacionesPanel, 1.0f);
		mainLayout.setComponentAlignment(operacionesPanel, new Alignment(48));
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setSizeFull();
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setSizeFull();
		
		// horizontalLayoutTop
		horizontalLayoutTop = buildHorizontalLayoutTop();
		mainLayout.addComponent(horizontalLayoutTop);
		mainLayout
				.setComponentAlignment(horizontalLayoutTop, new Alignment(20));
		
		// operacionesPanel
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutTop() {
		// common part: create layout
		horizontalLayoutTop = new HorizontalLayout();
		horizontalLayoutTop.setImmediate(false);
		horizontalLayoutTop.setWidth("100.0%");
		horizontalLayoutTop.setHeight("-1px");
		horizontalLayoutTop.setMargin(false);
		horizontalLayoutTop.setSpacing(false);
		
		// verticalCuentaLayout
		verticalCuentaLayout = buildVerticalCuentaLayout();
		horizontalLayoutTop.addComponent(verticalCuentaLayout);
		horizontalLayoutTop.setComponentAlignment(verticalCuentaLayout,
				new Alignment(48));
				
		return horizontalLayoutTop;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalCuentaLayout() {
		// common part: create layout
		verticalCuentaLayout = new VerticalLayout();
		verticalCuentaLayout.setImmediate(false);
		verticalCuentaLayout.setWidth("-1px");
		verticalCuentaLayout.setHeight("-1px");
		verticalCuentaLayout.setMargin(false);
		
		// cuentas
		cuentas = new ComboBox();
		cuentas.setCaption("Seleccione la cuenta");
		cuentas.setImmediate(true);
		cuentas.setInvalidAllowed(false);
		cuentas.setInputPrompt("");
		cuentas.setWidth("-1px");
		cuentas.setHeight("-1px");
		cuentas.setRequired(true);
		verticalCuentaLayout.addComponent(cuentas);
		
		return verticalCuentaLayout;
	}
		
	@AutoGenerated
	private HorizontalLayout buildHorizontalLabelsLayout() {
		// verticalButtonsLayout
		verticalButtonsLayout = buildVerticalButtonsLayout();
		horizontalLayoutTop.addComponent(verticalButtonsLayout);

		// common part: create layout
		horizontalLabelsLayout = new HorizontalLayout();
		horizontalLabelsLayout.setImmediate(false);
		horizontalLabelsLayout.setWidth("-1px");
		horizontalLabelsLayout.setHeight("-1px");
		horizontalLabelsLayout.setMargin(false);
		
		// verticalCaptionLayout
		verticalCaptionLayout = buildVerticalCaptionLayout();
		horizontalLabelsLayout.addComponent(verticalCaptionLayout);
		horizontalLabelsLayout.setComponentAlignment(verticalCaptionLayout,
				new Alignment(48));
		
		// verticalValuesLayout
		verticalValuesLayout = buildVerticalValuesLayout();
		horizontalLabelsLayout.addComponent(verticalValuesLayout);
		
		return horizontalLabelsLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalCaptionLayout() {
		// common part: create layout
		verticalCaptionLayout = new VerticalLayout();
		verticalCaptionLayout.setImmediate(false);
		verticalCaptionLayout.setWidth("120px");
		verticalCaptionLayout.setHeight("-1px");
		verticalCaptionLayout.setMargin(false, true, false, false);
		verticalCaptionLayout.setSpacing(true);
		
		// cuentaNombre
		cuentaNombre = new Label();
		//cuentaNombre.setCaption("");
		cuentaNombre.setImmediate(false);
		cuentaNombre.setWidth("-1px");
		cuentaNombre.setHeight("-1px");
		cuentaNombre.setValue("Cuenta: ");
		verticalCaptionLayout.addComponent(cuentaNombre);
		verticalCaptionLayout.setComponentAlignment(cuentaNombre, Alignment.MIDDLE_RIGHT);
		
		// cuentaPropietario
		cuentaPropietario = new Label();
		cuentaPropietario.setImmediate(false);
		//cuentaPropietario.setCaption("");
		cuentaPropietario.setWidth("-1px");
		cuentaPropietario.setHeight("-1px");
		cuentaPropietario.setValue("Coordinador: ");
		verticalCaptionLayout.addComponent(cuentaPropietario);
		verticalCaptionLayout.setComponentAlignment(cuentaPropietario, Alignment.MIDDLE_RIGHT);
		
		// cuentaRubro
		cuentaRubro = new Label();
		cuentaRubro.setImmediate(false);
		//cuentaPropietario.setCaption("");
		cuentaRubro.setWidth("-1px");
		cuentaRubro.setHeight("-1px");
		cuentaRubro.setValue("Rubro: ");
		verticalCaptionLayout.addComponent(cuentaRubro);
		verticalCaptionLayout.setComponentAlignment(cuentaRubro, Alignment.MIDDLE_RIGHT);
		
		// cuentaSoles
		cuentaSoles = new Label();
		cuentaSoles.setImmediate(false);
		//cuentaSoles.setCaption("");
		cuentaSoles.setWidth("-1px");
		cuentaSoles.setHeight("-1px");
		cuentaSoles.setValue("Saldo soles: ");
//		cuentaSoles.setStyleName(Reindeer.LABEL_H2);
		verticalCaptionLayout.addComponent(cuentaSoles);
		verticalCaptionLayout.setComponentAlignment(cuentaSoles, Alignment.MIDDLE_RIGHT);
		
		// cuentaDolares
		cuentaDolares = new Label();
		cuentaDolares.setImmediate(false);
		//cuentaDolares.setCaption("");
		cuentaDolares.setWidth("-1px");
		cuentaDolares.setHeight("-1px");
//		cuentaDolares.setStyleName(Reindeer.LABEL_H2);
		cuentaDolares.setValue("Saldo dolares: ");
		verticalCaptionLayout.addComponent(cuentaDolares);
		verticalCaptionLayout.setComponentAlignment(cuentaDolares, Alignment.MIDDLE_RIGHT);
		
		
		return verticalCaptionLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalValuesLayout() {
		// common part: create layout
		verticalValuesLayout = new VerticalLayout();
		verticalValuesLayout.setImmediate(false);
		verticalValuesLayout.setWidth("-1px");
		verticalValuesLayout.setHeight("-1px");
		verticalValuesLayout.setMargin(false, false, false, true);
		verticalValuesLayout.setSpacing(true);
		
		// cuentaNombreValue
		cuentaNombreValue = new Label();
		//cuentaNombreValue.setCaption(" ");
		cuentaNombreValue.setImmediate(false);
		cuentaNombreValue.setWidth("-1px");
		cuentaNombreValue.setHeight("-1px");
		cuentaNombreValue.setValue("Label");
		verticalValuesLayout.addComponent(cuentaNombreValue);
		
		// cuentaPropietarioValue
		cuentaPropietarioValue = new Label();
		//cuentaPropietarioValue.setCaption(" ");
		cuentaPropietarioValue.setImmediate(false);
		cuentaPropietarioValue.setWidth("-1px");
		cuentaPropietarioValue.setHeight("-1px");
		cuentaPropietarioValue.setValue("Label");
		verticalValuesLayout.addComponent(cuentaPropietarioValue);

		// cuentaRubroValue
		cuentaRubroValue = new Label();
		//cuentaRubroValue.setCaption(" ");
		cuentaRubroValue.setImmediate(false);
		cuentaRubroValue.setWidth("-1px");
		cuentaRubroValue.setHeight("-1px");
		cuentaRubroValue.setValue("Label");
		verticalValuesLayout.addComponent(cuentaRubroValue);
		
		
		// cuentaSolesValue
		cuentaSolesValue = new Label();
		//cuentaSolesValue.setCaption(" ");
		cuentaSolesValue.setImmediate(false);
		cuentaSolesValue.setWidth("-1px");
		cuentaSolesValue.setHeight("-1px");
		cuentaSolesValue.setValue("Label");
		verticalValuesLayout.addComponent(cuentaSolesValue);
		
		// cuentaDolaresValue
		cuentaDolaresValue = new Label();
		//cuentaDolaresValue.setCaption(" ");
		cuentaDolaresValue.setImmediate(false);
		cuentaDolaresValue.setWidth("-1px");
		cuentaDolaresValue.setHeight("-1px");
		cuentaDolaresValue.setValue("Label");
		verticalValuesLayout.addComponent(cuentaDolaresValue);
		
		return verticalValuesLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalButtonsLayout() {
		String buttonsWidth = "12em";
		// common part: create layout
		verticalButtonsLayout = new VerticalLayout();
		verticalButtonsLayout.setImmediate(false);
		verticalButtonsLayout.setWidth("-1px");
		verticalButtonsLayout.setHeight("-1px");
		verticalButtonsLayout.setMargin(true);
		verticalButtonsLayout.setSpacing(true);
		
		// cargoButton
		if (cargoButton==null) {
			cargoButton = new Button();
			cargoButton.setCaption("Cargo");
			cargoButton.setIcon(new ThemeResource("../icons/sign_remove.png"));
			cargoButton.setImmediate(false);
			cargoButton.setWidth(buttonsWidth);
			cargoButton.setHeight("-1px");
		}
		verticalButtonsLayout.addComponent(cargoButton);
		// abonoButton
		if (abonoButton==null) {
			abonoButton = new Button();
			abonoButton.setCaption("Abono");
			abonoButton.setIcon(new ThemeResource("../icons/sign_add.png"));
			abonoButton.setImmediate(false);
			abonoButton.setWidth(buttonsWidth);
			abonoButton.setHeight("-1px");			
		}
		verticalButtonsLayout.addComponent(abonoButton);
		// cuentaReporteButton
		if (cuentaReporteButton==null) {
			cuentaReporteButton = new Button();
			cuentaReporteButton.setCaption("Diario de cuenta ");
			cuentaReporteButton.setIcon(new ThemeResource("../icons/window_text.png"));
			cuentaReporteButton.setImmediate(false);
			cuentaReporteButton.setWidth(buttonsWidth);
			cuentaReporteButton.setHeight("-1px");			
		}
		verticalButtonsLayout.addComponent(cuentaReporteButton);
				// cerrarButton
		if (cerrarButton==null) {
			cerrarButton = new Button();
			cerrarButton.setCaption("Cerrar");
			cerrarButton.setIcon(new ThemeResource("../icons/back-icon.png"));			
			cerrarButton.setImmediate(false);
			cerrarButton.setWidth(buttonsWidth);
			cerrarButton.setHeight("-1px");			
		}
		verticalButtonsLayout.addComponent(cerrarButton);
		return verticalButtonsLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalReportButtonLayout() {
		// common part: create layout
		verticalReportButtonLayout = new VerticalLayout();
		verticalReportButtonLayout.setImmediate(false);
		verticalReportButtonLayout.setWidth("-1px");
		verticalReportButtonLayout.setHeight("-1px");
		verticalReportButtonLayout.setMargin(true);
		verticalReportButtonLayout.setSpacing(true);
		
		// reportesButton
		if (reportesButton == null) {
			reportesButton = new Button();
			reportesButton.setCaption("Manejo de Caja");
			
			reportesButton.setIcon(new ThemeResource("../icons/coin-icon.png"));
			reportesButton.setImmediate(false);
			reportesButton.setWidth("12.0em");
			reportesButton.setHeight("-1px");
		}
		verticalReportButtonLayout.addComponent(reportesButton);
		return verticalReportButtonLayout;
	}

	
	@AutoGenerated
	private Panel buildOperacionesPanel() {
		// common part: create layout
		operacionesPanel = new Panel();
		operacionesPanel.setImmediate(false);
		operacionesPanel.setWidth("100.0%");
		operacionesPanel.setSizeFull();
		//operacionesPanel.setScrollable(true);
		
		// verticalOperacionesLayout
		verticalOperacionesLayout = buildVerticalOperacionesLayout();
		operacionesPanel.setContent(verticalOperacionesLayout);
		
		return operacionesPanel;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalOperacionesLayout() {
		// common part: create layout
		verticalOperacionesLayout = new VerticalLayout();
		verticalOperacionesLayout.setImmediate(false);
		verticalOperacionesLayout.setWidth("100.0%");
		verticalOperacionesLayout.setSizeFull();
		verticalOperacionesLayout.setMargin(false);
		
		// operacionesTable
		operacionesTable = new OperacionesTable();
		operacionesTable.setWidth("100.0%");
		operacionesTable.setLocale(ConfigurationUtil.LOCALE);
		operacionesTable.setStyleName(ConfigurationUtil.get("CSS_STYLE"));
		operacionesTable.setSelectable(true);
		operacionesTable.setImmediate(true); // react at once when something is
		
		verticalOperacionesLayout.addComponent(operacionesTable);
		verticalOperacionesLayout.setExpandRatio(operacionesTable, 1.0f);
		verticalOperacionesLayout.setComponentAlignment(operacionesTable,
				new Alignment(48));
		
		return verticalOperacionesLayout;
	}

}